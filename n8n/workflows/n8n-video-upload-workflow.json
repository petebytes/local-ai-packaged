{
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "upload-video",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -80,
        160
      ],
      "id": "upload-video-webhook",
      "name": "Upload Video Webhook",
      "webhookId": "upload-video-webhook-id"
    },
    {
      "parameters": {
        "jsCode": "// Extract uploaded file data from webhook\nconst item = $input.first();\nconst binaryData = item.binary;\n\n// n8n stores uploaded files in binary data with key matching the form field name\n// The form field name is 'file', so we look for binaryData.file\nlet fileName = 'uploaded-video';\nlet fileKey = 'file';\n\n// Find the binary data key (could be 'file', 'data', or auto-generated)\nconst binaryKeys = Object.keys(binaryData || {});\nif (binaryKeys.length === 0) {\n  throw new Error('No file uploaded');\n}\n\nfileKey = binaryKeys[0]; // Use the first binary key\nconst fileData = binaryData[fileKey];\n\nif (!fileData) {\n  throw new Error('No file data found in upload');\n}\n\n// Get original filename\nfileName = fileData.fileName || 'uploaded-video';\n\n// Sanitize filename to prevent directory traversal\nconst sanitizedFileName = fileName.replace(/[\\/\\\\]/g, '_').replace(/[^a-zA-Z0-9._-]/g, '_');\nconst timestamp = new Date().toISOString().replace(/[:.]/g, '-').slice(0, -5);\nconst finalFileName = `${timestamp}_${sanitizedFileName}`;\n\nreturn [{\n  json: {\n    fileName: finalFileName,\n    originalName: fileName,\n    uploadTime: new Date().toISOString(),\n    binaryKey: fileKey\n  },\n  binary: {\n    data: fileData\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        128,
        160
      ],
      "id": "process-upload",
      "name": "Process Upload"
    },
    {
      "parameters": {
        "fileName": "=/nas/PeggysExtraStorage/videos-to-process/{{ $json.fileName }}",
        "options": {}
      },
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        320,
        160
      ],
      "id": "save-to-nas",
      "name": "Save to NAS"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": true, \"message\": \"File uploaded successfully\", \"fileName\": $json.fileName, \"originalName\": $json.originalName, \"uploadTime\": $json.uploadTime } }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        512,
        160
      ],
      "id": "respond-success",
      "name": "Respond Success"
    }
  ],
  "connections": {
    "Upload Video Webhook": {
      "main": [
        [
          {
            "node": "Process Upload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Upload": {
      "main": [
        [
          {
            "node": "Save to NAS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save to NAS": {
      "main": [
        [
          {
            "node": "Respond Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "instanceId": "local-ai-packaged-video-upload"
  }
}
